<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.fpi.mapper.pro.ProMapper">
<!--    전문가 마이페이지의 상세보기-->
    <select id="detailPro">
        SELECT p1.*, c.category_name
        FROM (SELECT p.pro_id, p.pro_name, p.phone_number, p.pro_img, p.emp_cnt,u.email, u.user_cash, p.pro_star_rate, l.region, l.city, cl.category_id, c.AWARD
              FROM tbl_pro p
                       JOIN tbl_location l ON p.location_id = l.location_id
                       JOIN tbl_category_list cl ON p.pro_id = cl.pro_id
                       JOIN tbl_user u ON p.user_id = u.user_id
                       JOIN TBL_CAREERINFO c ON p.PRO_ID = c.PRO_ID
             ) p1
                 JOIN tbl_category c ON p1.category_id = c.category_id
        WHERE p1.pro_id = #{proId}

    </select>
<!--    등록된 자격증 사진을 보여줄때 최근등록순 4개만 보여줌-->
<!--    <select id="selectCardFile4">-->
<!--        select infoFile.*-->
<!--        from (-->
<!--        select f.*-->
<!--        from TBL_CARDINFO_FILE f  join TBL_CARDINFO c on c.CARDINFO_ID = f.CARDINFO_ID-->
<!--        where pro_id=#{proId}-->
<!--        order by f.CARDINFO_FILE_ID DESC) infoFile-->
<!--        where ROWNUM &lt; 5-->
<!--    </select>-->
    <select id="selectCardFile">
         select f.*
         from TBL_CARDINFO_FILE f  join TBL_CARDINFO c on c.CARDINFO_ID = f.CARDINFO_ID
         where pro_id=#{proId}
         order by f.CARDINFO_FILE_ID DESC
    </select>


    <select id="selectCard">
        select *
        from TBL_CARDINFO
        where pro_id=#{proId}
    </select>

    <select id="selectEditPro">
        select pro.*,l.REGION,l.CITY
        from(select p.PRO_ID,p.PRO_NAME,p.PHONE_NUMBER,p.PRO_IMG,p.LOCATION_ID,u.EMAIL,career.CAREERINFO_ID,career.AWARD,category.CATEGORY_ID,c.CARDINFO_ID
             from tbl_pro p
                      join TBL_CAREERINFO career on p.PRO_ID = career.PRO_ID
                      join TBL_CATEGORY_LIST category on p.PRO_ID = category.PRO_ID
                      join TBL_USER u on p.USER_ID = u.USER_ID
                      join TBL_CARDINFO c on p.PRO_ID= c.PRO_ID)pro
                join TBL_LOCATION l on l.LOCATION_ID = pro.LOCATION_ID
        where pro.PRO_ID = #{proId}
    </select>

<!--    유저에서 전문가 전환이 되기때문에 por_id가져오기 위해서 필요-->
    <select id="selectProId">
        select pro_id
        from tbl_pro
        where user_id=#{userId}
    </select>

<!--    탈퇴시 폼에서 입력한 이름과 같은지 비교하기 위해서 필요-->
    <select id="selectProName">
        select PRO_NAME
        from tbl_pro
        where PRO_ID =#{proId}
    </select>
<!--    전문가 탈퇴시 서버에 등록된 자격증 사진 삭제 위해서 필요-->
    <select id="cardImg">
        select *
        from TBL_CARDINFO_FILE
        where CARDINFO_ID=#{cardInfoId}
    </select>
<!--    전문가 탈퇴-->
    <delete id="deletePro">
        delete from tbl_pro
        where pro_id=#{proId} and pro_name = #{proName}
    </delete>

<!--    마이페이지 전문가 정보 수정하기-->
    <update id="editPro">
        update tbl_pro
        set PRO_NAME =#{proName},phone_number = #{phoneNumber},PRO_IMG=#{proImg},location_id=#{locationId}
        where PRO_ID =#{proId}
    </update>
    <update id="editCategory">
        update tbl_category_list
        set category_id = #{categoryId}
        where PRO_ID =#{proId}
    </update>
<!--    추가만 가능하도록-->
    <update id="editCardInfoFile">
        update TBL_CARDINFO_FILE
        set CARDINFO_FILE_ROUTE = #{cardInfoFileRoute},CARDINFO_FILE_ORIGINAL =#{cardInfoFileOriginal}
        where CARDINFO_FILE_ID =#{cardInfoFileId}
    </update>
    <update id="editCardInfo">
        update TBL_CARDINFO
        set CERTI_ORGAN = #{certiOrgan},CERTI_NUM=#{certiNum}
        where PRO_ID=#{proId}
    </update>
    <update id="editCareerInfo">
        update TBL_CAREERINFO
        set AWARD=#{award}
        where CAREERINFO_ID = #{careerInfoId}
    </update>
<!--    전문가가 올리 견적 목록   -->
    <select id="selectProUploadList" resultType="ProUploadListDTO">
        SELECT *
        FROM (
            SELECT ROWNUM AS RN, UPLOAD.*
            FROM (
                select TPU.PRO_UPLOAD_ID, TPU.PRO_ID, tpu.PRO_UPLOAD_TITLE, tpu.PRO_UPLOAD_DATE, tp.PRO_STAR_RATE, tp.PRO_NAME, ts.SERVICE_NAME
                from TBL_PRO_UPLOAD TPU
                    inner join TBL_PRO TP
                    on TPU.PRO_ID = TP.PRO_ID
                    inner join TBL_SERVICE TS
                    on tpu.SERVICE_ID = ts.SERVICE_ID
        <where>
            <if test = "search != null">
                tpu.PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%'
            </if>
        </where>
                ORDER BY
                PRO_UPLOAD_DATE DESC
            ) UPLOAD
        WHERE ROWNUM &lt;= #{endRow}
        )
        WHERE rn &gt; #{startRow}

    </select>

<!--    전문가가 올린 견적 갯수  -->
    <select id="countProUpload">
        select count(*)
        from TBL_PRO_UPLOAD
        <where>
            <if test = "search != null">
                PRO_UPLOAD_TITLE LIKE '%' || #{search} || '%'
            </if>
        </where>
    </select>

    <!-- 견적으로  전문가 경력 가져오기-->
    <select id="selectProCareerByUp" resultType="ProCareerInfoListDTO">
        select tpc.PRO_ID, tpc.AWARD, tpc.CAREERINFO_ID
        from TBL_PRO_CAREERINFO TPC
                 inner join TBL_PRO_UPLOAD TPU
                            on TPU.PRO_ID = TPC.PRO_ID
        where TPU.PRO_UPLOAD_ID = #{proUploadId}
    </select>

    <!--    전문가가 올리 견적 상세보기  -->
    <select id="selectProUploadDetail" resultType="ProUploadDetailDTO">
        SELECT TPU.PRO_UPLOAD_ID, TPU.PRO_UPLOAD_DATE, TC.CATEGORY_NAME
             , TS.SERVICE_NAME, TL.REGION, TL.CITY, TPU.PRO_UPLOAD_CONTENT
             ,TP.PRO_STAR_RATE, TPU.PRO_UPLOAD_ADDRESS,TPU.PRO_UPLOAD_PAY_RANGE
             ,TP.PRO_NAME, TP.PRO_ID,TPU.PRO_UPLOAD_TITLE, TPU.PRO_UPLOAD_PAY, TP.EMP_CNT
        FROM TBL_PRO_UPLOAD TPU
                 INNER JOIN TBL_SERVICE ts
                            ON TPU.SERVICE_ID = TS.SERVICE_ID
                 INNER JOIN TBL_CATEGORY tc
                            ON TS.CATEGORY_ID = TC.CATEGORY_ID
                 INNER JOIN TBL_PRO TP
                            ON TP.PRO_ID = TPU.PRO_ID
                 INNER JOIN TBL_LOCATION tl
                            ON TP.LOCATION_ID = TL.LOCATION_ID
        WHERE TPU.PRO_UPLOAD_ID = #{proUploadId}
    </select>



<!--    전문가 견적 올리기-->
<!--    전문가 견적 올리 다음 시퀀스 가져오기-->
    <select id="getUploadSeq" resultType="long">
        select SEQ_UPLOAD.nextval from dual
    </select>

<!--    견적 작성 쿼리문-->
    <insert id="saveProUpload">
        insert into TBL_PRO_UPLOAD
        values (#{proUploadId}, #{proUploadTitle}, #{proUploadContent}, #{proUploadPay},
                #{proUploadPayRange}, sysdate, #{proUploadAddress}, #{proId}, #{serviceId})
    </insert>

    <!--    전문가 위치 가져오기-->
    <select id="selectProLocation" resultType="ProLocationDTO">
        select REGION, CITY, PRO_NAME
        from tbl_pro
                 inner join TBL_LOCATION
                            on tbl_pro.LOCATION_ID = TBL_LOCATION.LOCATION_ID
        where TBL_PRO.PRO_ID = #{proId}
    </select>

    <!--    회원 찾기를 통 보낸 요청-->
    <insert id="proRequest">
        insert into TBL_PRO_REQUEST
        values (SEQ_REQUEST.nextval, #{proRequestPay}, #{proRequestContent},
                sysdate, 'PRE', #{proId}, #{userUploadId})
    </insert>

    <!--    회원 올린 견적에 대해서 내가 보낸 요청이 있는 없는지 확인-->
    <select id="checkProRequest" resultType="long">
        select count(*)
        from TBL_USER_UPLOAD TUU
                 inner join TBL_PRO_REQUEST TPR
                            on TUU.USER_UPLOAD_ID = TPR.USER_UPLOAD_ID
                 inner join TBL_PRO TP
                            on TPR.PRO_ID = TP.PRO_ID
        where TUU.USER_UPLOAD_ID = #{userUploadId}
          and TPR.PRO_ID = #{proId}
    </select>

    <!--    전문가가 회원에 대해 리뷰 작성하기  -->
    <insert id="proWriteUserReview">
        insert into TBL_USER_REVIEW
        values (SEQ_REVIEW.nextval, #{userReviewTitle}, #{userReviewContent}, #{userReviewRate}, 100, sysdate,
                #{proId}, #{userId})
    </insert>


</mapper>