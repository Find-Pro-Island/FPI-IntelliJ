<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.fpi.mapper.pro.ProMapper">
<!--    받은 요청 갯수-->
    <select id="countReceivedRequest">
        select count(*)
        from(SELECT USER_REQUEST_ID, USER_REQUEST_PAY, USER_REQUEST_DATE , USER_REQUEST_PROGRESS,NVL(UR.USER_STAR_RATE, 0), UR.USER_NAME, TBL_PRO_UPLOAD.PRO_UPLOAD_TITLE
             FROM TBL_USER_REQUEST
                      INNER JOIN TBL_PRO_UPLOAD
                                 ON TBL_USER_REQUEST.PRO_UPLOAD_ID = TBL_PRO_UPLOAD.PRO_UPLOAD_ID
                      INNER JOIN TBL_USER UR
                                 ON TBL_USER_REQUEST.USER_ID = UR.USER_ID
             WHERE TBL_PRO_UPLOAD.PRO_ID = #{proId})
    </select>


<!--   받은 요청 동적 쿼리   -->
    <select id="selectReceivedReq" resultType="ProReceivedReqListDTO">
        SELECT *
        FROM (
                 SELECT ROWNUM AS RN, request.*
                 FROM (
                        SELECT USER_REQUEST_ID, USER_REQUEST_PAY, USER_REQUEST_DATE , USER_REQUEST_PROGRESS,NVL(UR.USER_STAR_RATE, 0), UR.USER_NAME, TBL_PRO_UPLOAD.PRO_UPLOAD_TITLE
                        FROM TBL_USER_REQUEST
                                INNER JOIN TBL_PRO_UPLOAD
                                        ON TBL_USER_REQUEST.PRO_UPLOAD_ID = TBL_PRO_UPLOAD.PRO_UPLOAD_ID
                                INNER JOIN TBL_USER UR
                                        ON TBL_USER_REQUEST.USER_ID = UR.USER_ID
                        WHERE TBL_PRO_UPLOAD.PRO_ID = #{proId}
                          ORDER BY
                                <choose>
                                    <when test="sort == 'oldest'">USER_REQUEST_DATE ASC</when>
                                    <otherwise> USER_REQUEST_DATE DESC</otherwise>
                                </choose>
                      ) request
                 WHERE rownum &lt;= #{endRow}
             )
        WHERE rn &gt; #{startRow}
    </select>

<!--    보낸 요청 목록    -->
    <select id="selectSendReq" resultType="ProSendReqListDTO">
        SELECT *
        FROM (
                 SELECT ROWNUM AS RN, request.*
                 FROM (
                            SELECT PRO_REQUEST_ID, PRO_REQUEST_PAY, PRO_REQUEST_DATE , PRO_REQUEST_PROGRESS,NVL(UR.USER_STAR_RATE, 0), UR.USER_NAME, TBL_USER_UPLOAD.USER_UPLOAD_TITLE
                            FROM TBL_PRO_REQUEST
                                    INNER JOIN TBL_USER_UPLOAD
                                            ON TBL_PRO_REQUEST.USER_UPLOAD_ID = TBL_USER_UPLOAD.USER_UPLOAD_ID
                                    INNER JOIN TBL_USER UR
                                            ON TBL_USER_UPLOAD.USER_ID = UR.USER_ID
                            WHERE TBL_PRO_REQUEST.PRO_ID = #{proId}
                        ORDER BY
                                <choose>
                                    <when test="sort == 'oldest'">PRO_REQUEST_DATE ASC</when>
                                    <otherwise> PRO_REQUEST_DATE DESC</otherwise>
                                </choose>
                      ) request
                 WHERE rownum &lt;= #{endRow}
             )
        WHERE rn &gt; #{startRow}
    </select>

    <select id="countSendRequest">
        select count(*)
        from(SELECT PRO_REQUEST_ID, PRO_REQUEST_PAY, PRO_REQUEST_DATE , PRO_REQUEST_PROGRESS,NVL(UR.USER_STAR_RATE, 0), UR.USER_NAME, TBL_USER_UPLOAD.USER_UPLOAD_TITLE
             FROM TBL_PRO_REQUEST
                      INNER JOIN TBL_USER_UPLOAD
                                 ON TBL_PRO_REQUEST.USER_UPLOAD_ID = TBL_USER_UPLOAD.USER_UPLOAD_ID
                      INNER JOIN TBL_USER UR
                                 ON TBL_USER_UPLOAD.USER_ID = UR.USER_ID
             WHERE TBL_PRO_REQUEST.PRO_ID = #{proId})
    </select>





    
    
</mapper>