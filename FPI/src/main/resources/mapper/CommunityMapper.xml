<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.fpi.mapper.board.CommunityMapper">


    <!--  list를 가져와서  페이징에 필요한 두개의 sql-->
    <select id="communitySelectAll" resultType="CommunityDetailDTO">
        SELECT *
        FROM (
        SELECT ROWNUM AS RN, COMMUNITY.*
        FROM (
        SELECT
        C.COMMUNITY_ID,
        C.SUBJECT,
        C.COMMUNITY_TITLE,
        C.COMMUNITY_CONTENT,
        C.AUTHOR,
        C.COMMUNITY_REGISTER_DATE,
        C.COMMUNITY_UPDATE_DATE,
        U.USER_ID,
        C.COMMUNITY_THUMBNAIL,
        C.SHOW_CONTENT,
        C.views,
        (SELECT COUNT(*) FROM TBL_LIKE L WHERE L.COMMUNITY_ID = C.COMMUNITY_ID) AS LIKE_COUNT,
        (SELECT COUNT(*) FROM TBL_COMMENT co WHERE  co.COMMUNITY_ID = C.COMMUNITY_ID) AS commentCount
        FROM
        TBL_COMMUNITY c
        JOIN
        TBL_USER U ON U.USER_ID = C.USER_ID
        <where>
            <if test="search != null and search != ''">
                <choose>
                    <when test="subject != null and subject == '자유게시판'">
                        C.SUBJECT = '자유게시판' AND
                        (C.COMMUNITY_CONTENT LIKE '%' || #{search} || '%'
                        OR C.COMMUNITY_TITLE LIKE '%' || #{search} || '%')
                    </when>
                    <when test="subject != null and subject == '전문가팁'">
                        C.SUBJECT = '전문가팁' AND
                        (C.COMMUNITY_CONTENT LIKE '%' || #{search} || '%'
                        OR C.COMMUNITY_TITLE LIKE '%' || #{search} || '%')
                    </when>
                    <otherwise>
                        (C.COMMUNITY_CONTENT LIKE '%' || #{search} || '%'
                        OR C.COMMUNITY_TITLE LIKE '%' || #{search} || '%')
                    </otherwise>
                </choose>
            </if>
            <if test="search == null or search == ''">
                <choose>
                    <when test="subject != null and subject == '자유게시판'">
                        C.SUBJECT = '자유게시판'
                    </when>
                    <when test="subject != null and subject == '전문가팁'">
                        C.SUBJECT = '전문가팁'
                    </when>
                    <otherwise>
                        1 = 1 <!-- Always true, acts as a fallback to include all rows when no subject filter is applied -->
                    </otherwise>
                </choose>
            </if>
        </where>
        ORDER BY
        C.COMMUNITY_UPDATE_DATE DESC
        ) COMMUNITY
        WHERE ROWNUM &lt;= #{endRow}
        )
        WHERE RN &gt; #{startRow}
    </select>

    <select id="countCommunity">
        SELECT COUNT(*)
        FROM tbl_Community
        WHERE
        <choose>
            <when test="subject == '자유게시판'">
                subject = '자유게시판'
            </when>
            <when test="subject == '전문가팁'">
                subject = '전문가팁'
            </when>
            <otherwise>
                subject IN ('자유게시판', '전문가팁')
            </otherwise>
        </choose>
    </select>








    <!--  community 게시글 상세보기  -->
    <select id="selectCommunityDetail" resultType="CommunityDetailDTO">
        SELECT
            C.COMMUNITY_ID,
            C.SUBJECT,
            C.COMMUNITY_TITLE,
            C.COMMUNITY_CONTENT,
            C.AUTHOR,
            C.Community_REGISTER_DATE,
            C.COMMUNITY_UPDATE_DATE,
            U.USER_ID,
            c.views,
            (SELECT COUNT(*) FROM TBL_LIKE L  WHERE L.COMMUNITY_ID = C.COMMUNITY_ID) AS LIKE_COUNT
        FROM
            TBL_COMMUNITY C JOIN TBL_USER U ON U.USER_ID = C.USER_ID
        where C.COMMUNITY_ID = #{communityId}
    </select>

    <!--    insert에 사용    -->
    <select id="getSeq" resultType="long">
        select SEQ_COMMUNITY.nextval from dual
    </select>
    <!--    작성  -->
    <!--    세션에 저장된 값을 가져와서 author에 넣어줄것임-->
    <insert id="saveCommunity">
        insert into TBL_COMMUNITY
        values(#{communityId}, #{subject}, #{communityTitle},#{communityContent}, sysdate, sysdate, #{userId}, #{communityThumbnail},#{showContent},0,#{author})
    </insert>

    <!--    게시글 수정-->
    <update id="editCommunity">
        update tbl_community
        set SUBJECT=#{subject},COMMUNITY_TITLE =#{communityTitle}, COMMUNITY_CONTENT =#{communityContent},COMMUNITY_UPDATE_DATE = sysdate ,COMMUNITY_THUMBNAIL=#{communityThumbnail},SHOW_CONTENT=#{showContent}
        where community_id = #{communityId}
    </update>

    <!--    게시글 삭제-->
    <delete id="deleteCommunity">
        delete from TBL_COMMUNITY
        where COMMUNITY_ID = #{communityId}
    </delete>

    <!--    해당 게시글 좋아요 한적있는지 조회-->
    <select id="selectLike">
        select LIKE_ID
        from TBL_LIKE
        where USER_ID=#{userId} and COMMUNITY_ID=#{communityId}
    </select>

    <!--                        좋아요 테이블                                  -->
    <insert id="insertLike">
        insert into TBL_LIKE
        values (#{likeId},#{userId},#{communityId})
    </insert>
    <select id="getLikeSeq" resultType="long">
        select SEQ_LIKE.nextval from dual
    </select>
    <delete id="deleteLike">
        delete from TBL_LIKE
        where LIKE_ID=#{likeId}
    </delete>


    <!--    최근 게시글 4개뿌려주기,메인에서 사용-->
    <select id="communityList" resultType="CommunityDTO">
        SELECT ROWNUM AS RN, COMMUNITY.*
        FROM (
                 SELECT
                     *
                 FROM
                     TBL_COMMUNITY C
                 ORDER BY
                     C.COMMUNITY_UPDATE_DATE DESC
             ) COMMUNITY
        WHERE ROWNUM &lt;= 4

    </select>

    <!--    조회수-->
    <update id="plusViews">
        update TBL_COMMUNITY
        set views = views + 1
        where COMMUNITY_ID = #{communityId}
    </update>


</mapper>