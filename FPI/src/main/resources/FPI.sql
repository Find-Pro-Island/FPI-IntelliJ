DROP SEQUENCE SEQ_BOARD;
DROP SEQUENCE SEQ_FILE;
DROP SEQUENCE SEQ_USER;
DROP SEQUENCE SEQ_COMMENT;
DROP TABLE TBL_USERS CASCADE CONSTRAINTS;
DROP TABLE TBL_BOARD CASCADE CONSTRAINTS;
DROP TABLE TBL_FILE;
DROP TABLE TBL_COMMENT;





CREATE TABLE TBL_USER(
     USER_ID VARCHAR2(255) PRIMARY KEY,
     PROVIDER VARCHAR2(100),
     USER_NAME VARCHAR2(100),
     PHONE_NUMBER VARCHAR2(50),
     USER_IMG VARCHAR2(255),
     EMAIL VARCHAR2(100),
     USER_CASH NUMBER,
     USER_PRO_APPROVAL VARCHAR2(5) DEFAULT 'NO'
        CHECK(USER_PRO_APPROVAL IN ('NO', 'YES')),
     USER_STAR_RATE NUMBER,
     ROLE VARCHAR2(10),
     LOCATION_ID NUMBER,
     CONSTRAINT FK_USER_LOCATION_ID FOREIGN KEY (LOCATION_ID)
         REFERENCES TBL_LOCATION (LOCATION_ID) ON DELETE CASCADE
);


CREATE TABLE TBL_PRO(
    PRO_ID NUMBER PRIMARY KEY,
    PRO_NAME VARCHAR2(100) NOT NULL,
    PRO_IMG VARCHAR2(255),
    PRO_STAR_RATE NUMBER,
    EMP_CNT NUMBER DEFAULT 0,
    LOCATION_ID NUMBER NOT NULL,
    USER_ID VARCHAR2(255),
    CONSTRAINT FK_PRO_USER_ID FOREIGN KEY (USER_ID)
        REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_PRO_LOCATION_ID FOREIGN KEY (LOCATION_ID)
        REFERENCES TBL_LOCATION (LOCATION_ID) ON DELETE CASCADE
);



CREATE TABLE TBL_LOCATION(
     LOCATION_ID NUMBER PRIMARY KEY,
     REGION VARCHAR2(50) NOT NULL,
     CITY VARCHAR2(50) NOT NULL
);

CREATE TABLE TBL_PRO_CARDINFO(
     CARDINFO_ID NUMBER PRIMARY KEY,
     CERTI_ORGAN VARCHAR2(255) NOT NULL,
     CERTI_NUM VARCHAR2(255) NOT NULL,
     PRO_ID NUMBER NOT NULL,
     CONSTRAINT FK_PROCARD FOREIGN KEY (PRO_ID)
         REFERENCES TBL_PRO (PRO_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_PRO_CAREERINFO(
       CAREERINFO_ID NUMBER PRIMARY KEY,
       AWARD VARCHAR2(255) NOT NULL,
       PRO_ID NUMBER NOT NULL,
       CONSTRAINT FK_PROCAREER FOREIGN KEY (PRO_ID)
           REFERENCES TBL_PRO (PRO_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_CATEGORY(
     CATEGORY_ID NUMBER PRIMARY KEY,
     CATEGORY_NAME VARCHAR2(50) NOT NULL
);

CREATE TABLE TBL_CATEGORY_LIST(
    CATEGORY_LIST_ID NUMBER PRIMARY KEY,
    CATEGORY_ID NUMBER NOT NULL,
    USER_ID VARCHAR2(255),
    PRO_ID NUMBER,
    CONSTRAINT FK_CATEGORY FOREIGN KEY (CATEGORY_ID)
        REFERENCES TBL_CATEGORY (CATEGORY_ID) ON DELETE CASCADE,
    CONSTRAINT FK_CATEGORY_USER_ID FOREIGN KEY (USER_ID)
        REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_CATEGORY_PRO_ID FOREIGN KEY (PRO_ID)
        REFERENCES TBL_PRO (PRO_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_SERVICE(
    SERVICE_ID NUMBER PRIMARY KEY,
    SERVICE_NAME VARCHAR2(50) NOT NULL,
    CATEGORY_ID NUMBER NOT NULL,
    CONSTRAINT FK_SERVICE_CATEGORY_ID FOREIGN KEY (CATEGORY_ID)
        REFERENCES TBL_CATEGORY (CATEGORY_ID) ON DELETE CASCADE
);


CREATE TABLE TBL_USER_ACCUSE(
    USER_ACCUSE_ID NUMBER PRIMARY KEY,
    USER_ACCUSE_CONTENT VARCHAR2(1000) NOT NULL,
    USER_ID VARCHAR2(255) NOT NULL,
    PRO_ID NUMBER NOT NULL,
    CONSTRAINT FK_USER_ACCUSE_USER_ID FOREIGN KEY (USER_ID)
        REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_USER_ACCUSE_PRO_ID FOREIGN KEY (PRO_ID)
        REFERENCES TBL_PRO (PRO_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_PRO_ACCUSE(
   USER_ACCUSE_ID NUMBER PRIMARY KEY,
   USER_ACCUSE_CONTENT VARCHAR2(1000) NOT NULL,
   USER_ID VARCHAR2(255) NOT NULL,
   PRO_ID NUMBER NOT NULL,
   CONSTRAINT FK_PRO_ACCUSE_USER_ID FOREIGN KEY (USER_ID)
       REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
   CONSTRAINT FK_PRO_ACCUSE_PRO_ID FOREIGN KEY (PRO_ID)
       REFERENCES TBL_PRO (PRO_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_NOTI(
     NOTI_ID NUMBER PRIMARY KEY,
     NOTI_TITLE VARCHAR2(255) NOT NULL,
     NOTI_CONTENT VARCHAR2(4000) NOT NULL,
     NOTI_REGISTER_DATE DATE DEFAULT SYSDATE,
     NOTI_UPDATE_DATE DATE DEFAULT SYSDATE
);

CREATE TABLE TBL_FAQ(
    FAQ_ID NUMBER PRIMARY KEY,
    FAQ_TITLE VARCHAR2(255) NOT NULL,
    FAQ_CONTENT VARCHAR2(4000) NOT NULL,
    FAQ_REGISTER_DATE DATE DEFAULT SYSDATE,
    FAQ_UPDATE_DATE DATE DEFAULT SYSDATE
);

CREATE TABLE TBL_USER_UPLOAD(
    USER_UPLOAD_ID NUMBER PRIMARY KEY,
    USER_UPLOAD_TITLE VARCHAR2(100) NOT NULL,
    USER_UPLOAD_CONTENT VARCHAR2(1000) NOT NULL,
    USER_UPLOAD_PAY NUMBER NOT NULL,
    USER_UPLOAD_PAY_RANGE NUMBER NOT NULL,
    USER_UPLOAD_DATE DATE DEFAULT SYSDATE,
    USER_UPLOAD_ADDRESS VARCHAR2(1000),
    USER_ID VARCHAR2(255),
    SERVICE_ID NUMBER,
    CONSTRAINT FK_USER_UPLOAD FOREIGN KEY (USER_ID)
        REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_USER_UPLOAD_SERVICE FOREIGN KEY (SERVICE_ID)
        REFERENCES TBL_SERVICE (SERVICE_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_PRO_UPLOAD(
   PRO_UPLOAD_ID NUMBER PRIMARY KEY,
   PRO_UPLOAD_TITLE VARCHAR2(100) NOT NULL,
   PRO_UPLOAD_CONTENT VARCHAR2(1000) NOT NULL,
   PRO_UPLOAD_PAY NUMBER NOT NULL,
   PRO_UPLOAD_PAY_RANGE NUMBER NOT NULL,
   PRO_UPLOAD_DATE DATE DEFAULT SYSDATE,
   PRO_UPLOAD_ADDRESS VARCHAR2(1000),
   PRO_ID NUMBER,
   SERVICE_ID NUMBER,
   CONSTRAINT FK_PRO_UPLOAD FOREIGN KEY (PRO_ID)
       REFERENCES TBL_PRO (PRO_ID) ON DELETE CASCADE,
   CONSTRAINT FK_PRO_UPLOAD_SERVICE FOREIGN KEY (SERVICE_ID)
       REFERENCES TBL_SERVICE (SERVICE_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_USER_REQUEST(
     USER_REQUEST_ID NUMBER PRIMARY KEY,
     USER_REQUEST_PAY NUMBER NOT NULL,
     USER_REQUEST_CONTENT VARCHAR2(1000) NOT NULL,
     USER_REQUEST_DATE DATE DEFAULT SYSDATE,
     USER_REQUEST_PROGRESS VARCHAR2(10) DEFAULT 'PRE' NOT NULL
	    CHECK (USER_REQUEST_PROGRESS IN ('PRE', 'ING', 'POST')),
     USER_ID VARCHAR2(255),
     PRO_UPLOAD_ID NUMBER,
     CONSTRAINT FK_USER_REQ_USER FOREIGN KEY (USER_ID)
         REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
     CONSTRAINT FK_USER_REQ_PRO_UP FOREIGN KEY (PRO_UPLOAD_ID)
         REFERENCES TBL_PRO_UPLOAD (PRO_UPLOAD_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_PRO_REQUEST(
    PRO_REQUEST_ID NUMBER PRIMARY KEY,
    PRO_REQUEST_PAY NUMBER NOT NULL,
    PRO_REQUEST_CONTENT VARCHAR2(1000) NOT NULL,
    PRO_REQUEST_DATE DATE DEFAULT SYSDATE,
    PRO_REQUEST_PROGRESS VARCHAR2(10) DEFAULT 'PRE' NOT NULL
	    CHECK (PRO_REQUEST_PROGRESS IN ('PRE', 'ING', 'POST')),
    PRO_ID NUMBER,
    USER_UPLOAD_ID NUMBER,
    CONSTRAINT FK_PRO_REQ_PRO FOREIGN KEY (PRO_ID)
        REFERENCES TBL_PRO (PRO_ID) ON DELETE CASCADE,
    CONSTRAINT FK_PRO_REQ_USER_UP FOREIGN KEY (USER_UPLOAD_ID)
        REFERENCES TBL_USER_UPLOAD (USER_UPLOAD_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_PRO_REVIEW(
   PRO_REVIEW_ID NUMBER PRIMARY KEY,
   PRO_REVIEW_TITLE VARCHAR2(100) NOT NULL,
   PRO_REVIEW_CONTENT VARCHAR2(1000) NOT NULL,
   PRO_REVIEW_RATE NUMBER,
   PRO_REVIEW_POINT NUMBER,
   PRO_REVIEW_DATE DATE DEFAULT SYSDATE,
    USER_ID VARCHAR2(255) NOT NULL,
   PRO_ID NUMBER NOT NULL,
   CONSTRAINT FK_PRO_REVIEW_USER FOREIGN KEY (USER_ID)
       REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
   CONSTRAINT FK_PRO_REVIEW_PRO FOREIGN KEY (PRO_ID)
       REFERENCES TBL_PRO (PRO_ID) ON DELETE CASCADE
);

--프로가 받는 리뷰 인데 받는 사람 pro_id 도 들어가야하지 않나?

CREATE TABLE TBL_USER_REVIEW(
    USER_REVIEW_ID NUMBER PRIMARY KEY,
    USER_REVIEW_TITLE VARCHAR2(100) NOT NULL,
    USER_REVIEW_CONTENT VARCHAR2(1000) NOT NULL,
    USER_REVIEW_RATE NUMBER,
    USER_REVIEW_POINT NUMBER,
    USER_REVIEW_DATE DATE DEFAULT SYSDATE,
    USER_ID VARCHAR2(255) NOT NULL,
    PRO_ID NUMBER NOT NULL,
    CONSTRAINT FK_USER_REVIEW_USER FOREIGN KEY (USER_ID)
        REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_USER_REVIEW_PRO FOREIGN KEY (PRO_ID)
        REFERENCES TBL_PRO (PRO_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_COMMUNITY(
  COMMUNITY_ID NUMBER PRIMARY KEY,
  SUBJECT VARCHAR2(50) NOT NULL,
  COMMUNITY_TITLE VARCHAR2(255) NOT NULL,
  COMMUNITY_CONTENT VARCHAR2(1000) NOT NULL,
  COMMUNITY_REGISTER_DATE DATE DEFAULT SYSDATE,
  COMMUNITY_UPDATE_DATE DATE DEFAULT SYSDATE,
  USER_ID VARCHAR2(255) NOT NULL,
  CONSTRAINT FK_COMMUNITY FOREIGN KEY (USER_ID)
      REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_COMMENT(
    COMMENT_ID NUMBER PRIMARY KEY,
    COMMENT_CONTENT VARCHAR2(1000) NOT NULL,
    COMMENT_REGISTER_DATE DATE DEFAULT SYSDATE,
    COMMENT_UPDATE_DATE DATE DEFAULT SYSDATE,
    USER_ID VARCHAR2(255) NOT NULL,
    COMMUNITY_ID NUMBER NOT NULL,
    CONSTRAINT FK_COMMENT_USER FOREIGN KEY (USER_ID)
        REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_COMMENT_COMMU FOREIGN KEY (COMMUNITY_ID)
        REFERENCES TBL_COMMUNITY (COMMUNITY_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_LIKE(
     LIKE_ID NUMBER,
     USER_ID VARCHAR2(255) NOT NULL,
     COMMUNITY_ID NUMBER NOT NULL,
     CONSTRAINT FK_LIKE_USER FOREIGN KEY (USER_ID)
         REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE,
     CONSTRAINT FK_LIKE_COMMU FOREIGN KEY (COMMUNITY_ID)
         REFERENCES TBL_COMMUNITY (COMMUNITY_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_COMMUNITY_FILE(
   COMMUNITY_FILE_ID NUMBER PRIMARY KEY,
   COMMUNITY_FILE_ROUTE VARCHAR2(1000),
   COMMUNITY_FILE_ORIGINAL VARCHAR2(1000),
   COMMUNITY_FILE_SAVED VARCHAR2(1000),
   COMMUNITY_ID NUMBER NOT NULL,
   CONSTRAINT FK_COMMUNITY_FILE FOREIGN KEY (COMMUNITY_ID)
       REFERENCES TBL_COMMUNITY (COMMUNITY_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_PRO_UPLOAD_FILE(
    PRO_UPLOAD_FILE_ID NUMBER PRIMARY KEY,
    PRO_UPLOAD_FILE_ROUTE VARCHAR2(1000),
    PRO_UPLOAD_FILE_ORIGINAL VARCHAR2(1000),
    PRO_UPLOAD_FILE_SAVED VARCHAR2(1000),
    PRO_UPLOAD_ID NUMBER NOT NULL,
    CONSTRAINT FK_PRO_UPLOAD_FILE FOREIGN KEY (PRO_UPLOAD_ID)
        REFERENCES TBL_PRO_UPLOAD (PRO_UPLOAD_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_USER_UPLOAD_FILE(
     USER_UPLOAD_FILE_ID NUMBER PRIMARY KEY,
     USER_UPLOAD_FILE_ROUTE VARCHAR2(1000),
     USER_UPLOAD_FILE_ORIGINAL VARCHAR2(1000),
     USER_UPLOAD_FILE_SAVED VARCHAR2(1000),
     USER_UPLOAD_ID NUMBER NOT NULL,
     CONSTRAINT FK_USER_UPLOAD_FILE FOREIGN KEY (USER_UPLOAD_ID)
         REFERENCES TBL_USER_UPLOAD (USER_UPLOAD_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_CARDINFO_FILE(
      CARDINFO_FILE_ID NUMBER PRIMARY KEY,
      CARDINFO_FILE_ROUTE VARCHAR2(1000),
      CARDINFO_FILE_ORIGINAL VARCHAR2(1000),
      CARDINFO_FILE_SAVED VARCHAR2(1000),
      CARDINFO_ID NUMBER NOT NULL,
      CONSTRAINT FK_CARDINFO_FILE FOREIGN KEY (CARDINFO_ID)
          REFERENCES TBL_PRO_CARDINFO (CARDINFO_ID) ON DELETE CASCADE
);

CREATE TABLE TBL_COUPON(
   COUPON_ID NUMBER PRIMARY KEY,
   COUPON_NUM VARCHAR2(255) NOT NULL,
   COUPON_VAL_DATE DATE NOT NULL,
   STATE CHAR(10) DEFAULT 'NO' NOT NULL
       CHECK (STATE IN ('YES', 'NO')),
   DISCOUNT NUMBER NOT NULL,
    USER_ID VARCHAR2(255) NOT NULL,
   CONSTRAINT FK_COUPON FOREIGN KEY (USER_ID)
       REFERENCES TBL_USER (USER_ID) ON DELETE CASCADE
);

CREATE SEQUENCE SEQ_USER
    START WITH 1
    INCREMENT BY 1
    NOCACHE;


CREATE SEQUENCE SEQ_PRO
    START WITH 1
    INCREMENT BY 1
    NOCACHE;


CREATE SEQUENCE SEQ_LOCATION
    START WITH 1
    INCREMENT BY 1
    NOCACHE;


CREATE SEQUENCE SEQ_PRO_INFO
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
-- PRO_CARD & PRO_CAREER 같이 쓰기


CREATE SEQUENCE SEQ_CATEGORY
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

CREATE SEQUENCE SEQ_CATEGORY_LIST
    START WITH 1
    INCREMENT BY 1
    NOCACHE;


CREATE SEQUENCE SEQ_SERVICE
    START WITH 1
    INCREMENT BY 1
    NOCACHE;


CREATE SEQUENCE SEQ_ACCUSE
    START WITH 1
    INCREMENT BY 1
    NOCACHE;


CREATE SEQUENCE SEQ_ADMIN
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
-- NOTI & FAQ


CREATE SEQUENCE SEQ_UPLOAD
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
-- USER_UPLOAD & PRO_UPLOAD 같이 쓰기


CREATE SEQUENCE SEQ_REQUEST
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
-- USER_REQUEST & PRO_REQUEST 같이 쓰기


CREATE SEQUENCE SEQ_REVIEW
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
-- USER_REVIEW & PRO_REVIEW 같이 쓰기


CREATE SEQUENCE SEQ_COMMUNITY
    START WITH 1
    INCREMENT BY 1
    NOCACHE;


CREATE SEQUENCE SEQ_COMMENT
    START WITH 1
    INCREMENT BY 1
    NOCACHE;


CREATE SEQUENCE SEQ_LIKE
    START WITH 1
    INCREMENT BY 1
    NOCACHE;


CREATE SEQUENCE SEQ_FILE
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
-- FILE 4개 테이블 같이 쓰기


CREATE SEQUENCE SEQ_COUPON
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

DROP TABLE TBL_USER;
DROP TABLE TBL_PRO;
DROP TABLE TBL_LOCATION;
DROP TABLE TBL_PRO_CARDINFO;
DROP TABLE TBL_PRO_CAREERINFO;
DROP TABLE TBL_CATEGORY;
DROP TABLE TBL_CATEGORY_LIST;
DROP TABLE TBL_SERVICE;
DROP TABLE TBL_USER_ACCUSE;
DROP TABLE TBL_PRO_ACCUSE;
DROP TABLE TBL_FAQ;
DROP TABLE TBL_NOTI;
DROP TABLE TBL_USER_UPLOAD;
DROP TABLE TBL_PRO_UPLOAD;
DROP TABLE TBL_USER_REQUEST;
DROP TABLE TBL_PRO_REQUEST;
DROP TABLE TBL_PRO_REVIEW;
DROP TABLE TBL_USER_REVIEW;
DROP TABLE TBL_COMMUNITY;
DROP TABLE TBL_COMMENT;
DROP TABLE TBL_LIKE;
DROP TABLE TBL_COMMUNITY_FILE;
DROP TABLE TBL_PRO_UPLOAD_FILE;
DROP TABLE TBL_USER_UPLOAD_FILE;
DROP TABLE TBL_CARDINFO_FILE;
DROP TABLE TBL_COUPON;

DROP SEQUENCE SEQ_USER;
DROP SEQUENCE SEQ_PRO;
DROP SEQUENCE SEQ_LOCATION;
DROP SEQUENCE SEQ_PRO_INFO;
DROP SEQUENCE SEQ_CATEGORY;
DROP SEQUENCE SEQ_CATEGORY_LIST;
DROP SEQUENCE SEQ_SERVICE;
DROP SEQUENCE SEQ_ADMIN;
DROP SEQUENCE SEQ_ACCUSE;
DROP SEQUENCE SEQ_UPLOAD;
DROP SEQUENCE SEQ_REQUEST;
DROP SEQUENCE SEQ_REVIEW;
DROP SEQUENCE SEQ_COMMUNITY;
DROP SEQUENCE SEQ_COMMENT;
DROP SEQUENCE SEQ_LIKE;
DROP SEQUENCE SEQ_FILE;
DROP SEQUENCE SEQ_COUPON;

-- drop table

delete from tbl_user
where user_id='3614057925' and user_name = '민정';



SELECT *
FROM (
         SELECT ROWNUM AS RN, request.*
         FROM (
                  SELECT PRO_REQUEST_ID, PRO_REQUEST_PAY, PRO_REQUEST_DATE , PRO_REQUEST_PROGRESS, NVL(PR.PRO_STAR_RATE, '0') AS pro_Star_Rate, PR.PRO_NAME, PR.EMP_CNT, TBL_USER_UPLOAD.USER_UPLOAD_TITLE
                  FROM TBL_PRO_REQUEST
                           INNER JOIN TBL_USER_UPLOAD
                                      ON TBL_PRO_REQUEST.USER_UPLOAD_ID = TBL_USER_UPLOAD.USER_UPLOAD_ID
                           INNER JOIN TBL_PRO pr
                                      ON TBL_PRO_REQUEST.PRO_ID = PR.PRO_ID
                  WHERE TBL_USER_UPLOAD.USER_ID = '3619331702'
                  ORDER BY
                      PRO_REQUEST_DATE DESC
              ) request
         WHERE rownum <= 6
     )
WHERE rn > 0;

















